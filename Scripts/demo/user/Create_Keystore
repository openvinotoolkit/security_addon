#! /bin/bash
#
# Copyright (c) 2020-2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


OPTIND=1
storecert=0
TRACE=/dev/null

show_usage (){
   echo "Usage: $0 <keystore_name> [-c certificate]"
return 0
}

if [ "$1" = "" ]
then
    show_usage
    exit 1
fi

PARAMS=""
while (( "$#" )); do
  case "$1" in
    -v)
      TRACE=/dev/stdout
      shift
      ;;
    -c)
      storecert=1
      shift
      ;;
    -h)
      show_help
      exit 1
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

cd $OVSA_DEV_ARTEFACTS
if [ $storecert = 1 ]
then
      /opt/ovsa/bin/ovsatool keygen -storecert -c $2 -k $1 > $TRACE
      if [ "$?" = 0 ]
      then
          echo "Successfully stored $2 in $1"
      else
          echo "Storing $2 in $1 failed"
          exit 1
      fi
else
      /opt/ovsa/bin/ovsatool keygen -storekey -t ECDSA -n Intel -k $1 -r  $1.csr -e "/C=IN/CN=localhost" > $TRACE
      if [ "$?" = 0 ]
      then
          echo "Successfully generated $OVSA_DEV_ARTEFACTS/$1"
      else
          echo "Generating $1 failed"
          exit 1
      fi
      /opt/ovsa/bin/ovsatool keygen -storecert -c $1.csr.crt -k $1 > $TRACE
      if [ "$?" != 0 ]
      then
          echo "Generating $1 failed"
      fi
fi
