#
# Copyright (c) 2020-2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# The binary to execute.
libos.entrypoint = "bin/ovsatool"
loader.log_level = "{{ log_level }}"

# Gramine environment, including the path to the library OS
loader.preload = "file:{{ gramine.libos }}" # for compatibility with v1.0
loader.entrypoint = "file:{{ gramine.libos }}"


# Environment variables
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = true

# Default glibc files, mounted from the Runtime directory in GRAMINE_DIR.

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "/opt/ovsa/tmp_dir", uri = "file:/opt/ovsa/tmp_dir" },
  { path = "/opt/ovsa/certs", uri = "file:/opt/ovsa/certs" },
  { path = "/opt/ovsa/gramine/keystore", uri = "file:/opt/ovsa/gramine/keystore" },
  { path = "/opt/ovsa/gramine/artefacts", uri = "file:/opt/ovsa/gramine/artefacts" },
  { path = "/etc", uri = "file:/etc" }
]

# SGX general options

# Set the virtual memory size of the SGX enclave. For SGX v1, the enclave
# size must be specified during signing. If OpenVINO needs more virtual memory
# than the enclave size, Gramine will not be able to allocate it.
sgx.enclave_size = "2G"

# Set the maximum number of enclave threads. For SGX v1, the number of enclave
# TCSes must be specified during signing, so the application cannot use more
# threads than the number of TCSes. Note that Gramine also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).
#
# We (somewhat arbitrarily) specify 16 threads since OpenVINO is multithreaded.
sgx.thread_num = 16

# SGX trusted libraries
sgx.trusted_files = [
# Glibc libraries
"file:{{ gramine.runtimedir() }}/",
"file:{{ gramine.libos }}",

"file:bin/ovsatool"
]

#For protected file system
sgx.protected_mrsigner_files = ["file:/opt/ovsa/gramine/keystore"]


sgx.allowed_files = [
"file:/opt/ovsa/gramine/artefacts",
"file:/opt/ovsa/certs",
"file:/etc/nsswitch.conf",
"file:/etc/ethers",
"file:/etc/host.conf",
"file:/etc/hostname",
"file:/etc/hosts",
"file:/etc/resolv.conf",
"file:/etc/ssl/certs/ca-certificates.crt",
"file:/opt/ovsa/tmp_dir"
]

